public struct Pair<T, U> {}

public trait SomeTrait<T> {
    type Inner<U>;
}

implements<T> SomeTrait<T> {
    type Inner<U> = Pair<T, U>;
}

public struct SomeStruct {
    public dummy: SomeTrait<int32>::Inner<int64>;
}

/*

# Todo

- Implement a logic that check if all lifetime parameters are used in the `implements` substitution.

- Implements a logic that properly deduces lifetime parameters in `implements`.

- Check if the generic parameters and where clause of the `implements` member match the `trait`.
 */
