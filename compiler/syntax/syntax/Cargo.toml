[package]
name = "pernixc_syntax"
version.workspace = true
authors.workspace = true
description.workspace = true
edition.workspace = true
rust-version.workspace = true

[features]
arbitrary = [
    "dep:proptest",
    "pernixc_lexical/arbitrary",
    "dep:pernixc_test_input",
]

[dependencies]
pernixc_lexical = { path = "../lexical" }
pernixc_parser = { path = "../parser" }
pernixc_test_input = { path = "../../base/test_input", optional = true }
pernixc_serialize = { path = "../../base/serialize" }
pernixc_stable_hash = { path = "../../base/stable_hash" }
proptest = { workspace = true, optional = true }
enum-as-inner = { workspace = true }
derive_more = { workspace = true }

[dev-dependencies]
pernixc_source_file = { path = "../../base/source_file" }
pernixc_lexical = { path = "../lexical", features = ["arbitrary"] }
pernixc_test_input = { path = "../../base/test_input" }
pernixc_target = { path = "../../base/target" }
pernixc_handler = { path = "../../base/handler" }
proptest = { workspace = true }

[lints]
workspace = true
