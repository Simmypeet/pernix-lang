[package]
name = "pernixc_bootstrap"
version.workspace = true
authors.workspace = true
description.workspace = true
edition.workspace = true
rust-version.workspace = true

[dependencies]
pernixc_query = { path = "../query" }
pernixc_source_file = { path = "../../base/source_file" }
pernixc_handler = { path = "../../base/handler" }
pernixc_lexical = { path = "../../syntax/lexical" }
pernixc_stable_type_id = { path = "../../base/stable_type_id" }
pernixc_syntax = { path = "../../syntax/syntax" }
pernixc_parser = { path = "../../syntax/parser" }
pernixc_target = { path = "../../base/target" }
pernixc_diagnostic = { path = "../../base/diagnostic" }
pernixc_serialize = { path = "../../base/serialize" }
pernixc_hash = { path = "../../base/hash" }
pernixc_stable_hash = { path = "../../base/stable_hash" }
pernixc_extend = { path = "../../base/extend" }
pernixc_arena = { path = "../../base/arena" }
rayon = { workspace = true }
parking_lot = { workspace = true }
enum-as-inner = { workspace = true }
dashmap = { workspace = true }
fnv = { workspace = true }
thiserror = { workspace = true }
derive_more = { workspace = true }
extend = { workspace = true }
flexstr = { workspace = true }
typed-builder = { workspace = true }
derive-new = { workspace = true }
strsim = { workspace = true }

[lints]
workspace = true
