[package]
name = "pernixc_term"
version.workspace = true
authors.workspace = true
description.workspace = true
edition.workspace = true
rust-version.workspace = true

[features]
arbitrary = [
    "dep:proptest",
    "pernixc_symbol/arbitrary",
    "pernixc_arena/arbitrary",
]

[dependencies]
pernixc_serialize = { path = "../../base/serialize" }
pernixc_target = { path = "../../base/target" }
pernixc_query = { path = "../../base/query" }
pernixc_arena = { path = "../../base/arena" }
pernixc_hash = { path = "../../base/hash" }
pernixc_extend = { path = "../../base/extend/" }
pernixc_lexical = { path = "../../syntax/lexical" }
pernixc_stable_hash = { path = "../../base/stable_hash" }
pernixc_stable_type_id = { path = "../../base/stable_type_id" }
pernixc_symbol = { path = "../symbol" }
enum-as-inner = { workspace = true }
derive_more = { workspace = true }
getset = { workspace = true }
paste = { workspace = true }
thiserror = { workspace = true }
derive-new = { workspace = true }
proptest = { workspace = true, optional = true }
flexstr = { workspace = true }
trait-variant = { workspace = true }

[dev-dependencies]
proptest = { workspace = true }
pernixc_symbol = { path = "../symbol", features = ["arbitrary"] }
pernixc_arena = { path = "../../base/arena", features = ["arbitrary"] }

[lints]
workspace = true
