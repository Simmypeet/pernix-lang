public struct SomeStruct 
{
    public type A = float32; 
    public type B = A;       

    public let first: A;         // refers to ::test::SomeStruct::A;
    public let second: B;        // refers to ::test::SomeStruct::B;
    public let third: ::test::A; // refers to ::test::A
}

public type A = float64;
public type B = C;
public type C = B;

public enum Boolean 
{
    True,
    False,
}

public function add(a: int32, b: int32): int32 {
    return a + b; 
}

public function add(a: float32, b: float32): float32 {
    return a + b; 
}

public function sub(a: float32, b: float32): float32 {
    return a - b;
}

public function add(a: int32, b: int32): float32 { 
    return a as float32 + b as float32;
}