public function first():
    let .. = match true: # missing false arm
        true:  1


public function second(a: bool, b: bool):
    let .. = match (a, b): # missing (false, false) arm
        (true, true):   1
        (true, false):  2
        (false, true):  3


public function third(a: uint8):
    let .. = match a: # missing arms for 3..255
        0: 1
        1: 2
        2: 3


public enum Direction:
    North
    East
    South
    West


public function fourth(a: bool, direction: Direction):
    let .. = match (a, direction): # missing (false, West) arm
        (true, case North): 1
        (true, case East):  2
        (true, case South): 3
        (true, case West):  4

        (false, case North): 5
        (false, case East):  6
        (false, case South): 7


public enum FakeBool:
    True
    False


public function fifth(a: FakeBool, direction: Direction):
    let .. = match (a, direction): # missing (False, West) arm
        (case True,  case North): 1
        (case True,  case East):  2
        (case True,  case South): 3
        (case True,  case West):  4

        (case False, case North): 5
        (case False, case East):  6
        (case False, case South): 7