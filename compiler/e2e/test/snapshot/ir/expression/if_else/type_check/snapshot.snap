---
source: compiler/e2e/test/snapshot/mod.rs
expression: clean_run
---
stderr:
error: mismatched types: expected `{signed}`, found `uint32`
  ╭─ compiler/e2e/test/snapshot/ir/expression/if_else/type_check/main.pnx:4:46
  │
4 │     let typeMismatched = if cond: -420 else: 64u32 # error {signed} != int32
  │                                              ^^^^^ expected `{signed}`, found `uint32`
  │
  = ensure the expression type matches the expected type

error: this `if` expression is expected to have an `else` branch
  ╭─ compiler/e2e/test/snapshot/ir/expression/if_else/type_check/main.pnx:5:23
  │
5 │     let missingElse = if cond: 10 # error missing else branch
  │                       ^^^^^^^^^^^
  │
  = the `if` expression `express` a value having type other than unit, so an `else` branch expressing a value of the same type is required

error: mismatched types: expected `()`, found `{number}`
   ╭─ compiler/e2e/test/snapshot/ir/expression/if_else/type_check/main.pnx:10:17
   │
10 │         express 53   # must be unit
   │                 ^^ expected `()`, found `{number}`
   │
   = ensure the expression type matches the expected type

error: mismatched types: expected `()`, found `bool`
   ╭─ compiler/e2e/test/snapshot/ir/expression/if_else/type_check/main.pnx:12:17
   │
12 │         express true # must be unit
   │                 ^^^^ expected `()`, found `bool`
   │
   = ensure the expression type matches the expected type

error: mismatched types: expected `()`, found `{number}`
   ╭─ compiler/e2e/test/snapshot/ir/expression/if_else/type_check/main.pnx:17:14
   │
17 │     if cond: 32       # not fine, 32 is rvalue and is not unit
   │              ^^ expected `()`, found `{number}`
   │
   = ensure the expression type matches the expected type

error: this `if` expression is expected to have an `else` branch
   ╭─ compiler/e2e/test/snapshot/ir/expression/if_else/type_check/main.pnx:21:10
   │  
21 │       else if cond:
   │ ╭──────────^
22 │ │         express false
   │ ╰─────────────────────^
   │  
   = the `if` expression `express` a value having type other than unit, so an `else` branch expressing a value of the same type is required

error: Compilation aborted due to 6 error(s)



stdout:
