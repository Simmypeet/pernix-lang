public struct Invariant['x, 'a]:
    where:
        'a: 'x

    private mutableRef: &'x mut &'a int32


public trait Identity[T]:
    public type Output


public type Constrained['x, 'a, T] = T:
    where:
        'a: 'x
        Identity[T]::Output = Invariant['x, 'a]


public type Use['x, 'a, 'b, T] = Constrained['x, 'a, T]:
    where:
        'a: 'x
        'b: 'x
        Identity[T]::Output = Invariant['x, 'b]
