# fake vector
public struct Vector[T]:
    private _marker: phantom T


implements[T] Vector[T]:
    public function new() -> this:
        panic


    public function push['a](self: &'a mut this, value: T):
        where:
            T: 'a

public function main(cond: bool):
    let mut first = 32
    let mut second = 64
    let mut vector = Vector::new()

    let mut ref = &mut first
    vector.push(&mut *ref)

    if cond:
        ref = &mut second
    else:
        # no reassignment, will error
        pass

    
    vector.push(&mut *ref)