## Case
## 12 
## 34


from core import Drop, Copy


extern "C":
    public function printf(format: &uint8, ...) -> int32
    public function scanf(format: &uint8, ...) -> int32


public struct LoudDrop:
    private value: int32


final implements Drop[LoudDrop]:
    function drop(self: &mut LoudDrop):
        printf(&"Dropping %d\n\0".[0], self.value)


final implements Copy[LoudDrop] delete


public struct ZstLoudDrop:
    pass


final implements Drop[ZstLoudDrop]:
    function drop(self: &mut ZstLoudDrop):
        printf(&"Dropping ZST\n\0".[0])


final implements Copy[ZstLoudDrop] delete


public function createLoudDrop(value: int32) -> LoudDrop:
    let loudDrop = LoudDrop { value: value }
    return loudDrop


public function createZstLoudDrop() -> ZstLoudDrop:
    let zstLoudDrop = ZstLoudDrop {}
    return zstLoudDrop


public function main():
    let mut value = 0i32
    scanf(&"%d\0".[0], &mut value)
    LoudDrop { value: value }

    scanf(&"%d\0".[0], &mut value)
    createLoudDrop(value)

    ZstLoudDrop {}
    createZstLoudDrop()