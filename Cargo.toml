[workspace]
resolver = "2"
members = [
    # tidy-alphabetical-start
    "compiler/base/arena",
    "compiler/base/serialize",
    "compiler/base/serialize_derive",
    "compiler/base/target",
    "compiler/base/source_file",
    "compiler/base/hash",
    "compiler/base/diagnostic",
    "compiler/base/handler",
    "compiler/base/test_input",
    "compiler/base/stable_type_id",
    "compiler/base/identifiable_derive",
    "compiler/base/identifiable_derive_lib",
    "compiler/base/stable_hash",
    "compiler/base/stable_hash_derive",

    "compiler/syntax/lexical",
    "compiler/syntax/parser",
    "compiler/syntax/syntax",

    "compiler/semantic/query",
    "compiler/semantic/query_derive",
    "compiler/semantic/bootstrap",

    "compiler/driver",
    "compiler/main",
    "compiler/e2e",

    # tidy-alphabetical-end
]

[workspace.dependencies]
flexstr = { version = "0.9.2" }
derive_more = { version = "2.0.1", features = [
    "display",
    "deref",
    "deref_mut",
    "from",
] }
enum-as-inner = "0.6.0"
thiserror = "2.0.12"
getset = "0.1.2"
proptest = "1.4.0"
lazy_static = "1.4.0"
strum = "0.27.1"
strum_macros = "0.27.1"
colored = "3.0.0"
paste = "1.0.12"
tempfile = "3.5.0"
by_address = "1.1.0"
quickcheck = "1.0.3"
itertools = "0.14.0"
parking_lot = { version = "0.12.1" }
derive-new = "0.7.0"
memmap2 = "0.9.3"
ouroboros = "0.18.0"
take_mut = "0.2.2"
rayon = "1.8.0"
clap = { version = "4.4.0", features = ["derive"] }
bitflags = "2.4.1"
drain_filter_polyfill = "0.1.3"
typestate = "0.8.0"
enum_dispatch = "0.3.12"
tokio = { version = "1.35.1", features = ["full"] }
static_assertions = "1.1.0"
bimap = "0.6.3"
env_logger = "0.11.0"
log = "0.4.14"
tower-lsp = { version = "0.20.0", features = ["proposed"] }
dashmap = { version = "6.1.0" }
bit-vec = "0.8.0"
displaydoc = "0.2.5"
ron = "0.10.1"
typetag = "0.2.19"
erased-serde = "0.4.5"
indicatif = "0.17.9"
inkwell = { version = "0.5.0", features = ["llvm18-0", "no-libffi-linking"] }
typed-builder = "0.21.0"
assert_cmd = "2.0.16"
backtrace = "0.3.69"
toml = { version = "0.8.8", features = ["display"] }
codespan-reporting = { version = "0.12.0" }
fnv = "1.0.7"
macro_rules_attribute = { version = "0.2.0", features = ["verbose-expansions"] }
smallbox = { version = "0.8.6" }
quote = { version = "1.0.28", features = ["proc-macro"] }
proc-macro2 = { version = "1.0.28", features = ["proc-macro"] }
syn = { version = "2.0.101", features = ["full"] }
insta = { version = "1.43.0", features = ["ron", "filters"] }
postcard = { version = "1.1.1", features = ["use-std"] }
termcolor = { version = "1.2.0" }
extend = { version = "1.2.0" }
redb = { version = "2.6.0" }


[patch.crates-io]
inkwell = { git = "https://github.com/Simmypeet/inkwell", rev = "4366f7b37b4e732b4c567494077f3d871e2a2a60" }

[workspace.package]
version = "0.1.0-beta.2"
authors = ["Simmypeet"]
description = "The Pernix Programming Language Compiler"
edition = "2021"
rust-version = "1.88.0"

[workspace.lints.rust]
missing_docs = "deny"
missing_copy_implementations = "deny"
missing_debug_implementations = "deny"

[workspace.lints.rustdoc]
broken_intra_doc_links = "deny"

[workspace.lints.clippy]
all = { level = "deny", priority = -1 }
pedantic = { level = "deny", priority = -1 }
missing_panics_doc = "allow"
missing_errors_doc = "allow"
use_self = "deny"
useless_let_if_seq = "deny"
set_contains_or_insert = "deny"
option_if_let_else = "deny"
needless_collect = "deny"
missing_const_for_fn = "deny"
equatable_if_let = "deny"
redundant_clone = "deny"
cognitive_complexity = "deny"
type_repetition_in_bounds = "deny"
trait_duplication_in_bounds = "deny"
collection_is_never_read = "deny"
branches_sharing_code = "deny"
iter_on_empty_collections = "deny"
iter_on_single_items = "deny"

[workspace.metadata.cargo-machete]
ignored = ["strum"]
