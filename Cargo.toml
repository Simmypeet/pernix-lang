[workspace]
resolver = "2"
members = [
    "compiler/pernixc_lexical",
    "compiler/pernixc_syntax",
    "compiler/pernixc_test_input",
    "compiler/pernixc_storage",
    "compiler/pernixc_table",
    "compiler/pernixc_arena",
    "compiler/pernixc_term",
    "compiler/pernixc_type_system",
    "compiler/pernixc_handler",
    "compiler/pernixc_source_file",
    "compiler/pernixc_diagnostic",
    "compiler/pernixc_log",
    "compiler/pernixc_component",
    "compiler/pernixc_resolution",
    "compiler/pernixc_builder",
    "compiler/pernixc_driver",
    "compiler/pernixc",
    "compiler/pernixc_ir",
    "compiler/pernixc_transitive_closure",
    "compiler/pernixc_intrinsic",
    "lsp/pernix_server",
]

[workspace.dependencies]
enum-as-inner = "0.6.0"
thiserror = "1.0.40"
getset = "0.1.2"
proptest = "1.4.0"
lazy_static = "1.4.0"
strum = "0.26.1"
strum_macros = "0.26.1"
derive_more = "0.99.17"
colored = "2.0.0"
paste = "1.0.12"
tempfile = "3.5.0"
by_address = "1.1.0"
quickcheck = "1.0.3"
itertools = "0.13.0"
parking_lot = { version = "0.12.1", features = ["serde"] }
derive-new = "0.7.0"
memmap2 = "0.9.3"
ouroboros = "0.18.0"
take_mut = "0.2.2"
rayon = "1.8.0"
clap = { version = "4.4.0", features = ["derive"] }
bitflags = "2.4.1"
drain_filter_polyfill = "0.1.3"
typestate = "0.8.0"
enum_dispatch = "0.3.12"
tokio = { version = "1.35.1", features = ["full"] }
static_assertions = "1.1.0"
bimap = "0.6.3"
env_logger = "0.9.0"
log = "0.4.14"
serde = { version = "1.0.104", features = ["derive"] }
serde_json = "1.0.8"
tower-lsp = { version = "0.20.0", features = ["proposed"] }
dashmap = { version = "6.1.0", features = ["serde"] }
bit-vec = "0.8.0"
displaydoc = "0.2.5"
ron = "0.8.1"
typetag = "0.2.19"
erased-serde = "0.4.5"
bincode = "1.3.3"
bitcode = "0.6.3"
serde_yaml = "0.9.0"
indicatif = "0.17.9"
typed-builder = "0.20.0"

[workspace.package]
version = "0.1.0"
authors = ["Simmypeet"]
description = "The Pernix Programming Language Compiler"
edition = "2021"
rust-version = "1.75.0"

[workspace.lints.rust]
missing_docs = "deny"
missing_copy_implementations = "deny"
missing_debug_implementations = "deny"

[workspace.lints.rustdoc]
broken_intra_doc_links = "deny"

[workspace.lints.clippy]
all = { level = "deny", priority = -1 }
pedantic = { level = "deny", priority = -1 }
missing_panics_doc = "allow"
use_self = "deny"
useless_let_if_seq = "deny"
set_contains_or_insert = "deny"
option_if_let_else = "deny"
needless_collect = "deny"
missing_const_for_fn = "deny"
equatable_if_let = "deny"
redundant_clone = "deny"
cognitive_complexity = "deny"
type_repetition_in_bounds = "deny"
trait_duplication_in_bounds = "deny"
collection_is_never_read = "deny"
branches_sharing_code = "deny"
iter_on_empty_collections = "deny"
iter_on_single_items = "deny"
